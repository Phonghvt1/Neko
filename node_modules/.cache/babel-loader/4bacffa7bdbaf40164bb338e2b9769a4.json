{"ast":null,"code":"var _jsxFileName = \"/Users/chiba/Desktop/Neko/src/App.js\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import { Fragment } from \"react\";\n// import { publicRoutes } from \"./routes\";\n// import { DefaultLayout } from \"./layouts\";\n// function App() {\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           {publicRoutes.map((route, index) => {\n//             const Page = route.component;\n//             let Layout = DefaultLayout;\n//             if (route.layout) {\n//               Layout = route.layout;\n//             } else if (route.layout === null) {\n//               Layout = Fragment;\n//             }\n//             if (!route.private) {\n//               return (\n//                 <Route\n//                   key={index}\n//                   path={route.path}\n//                   element={\n//                     <Layout>\n//                       <Page />\n//                     </Layout>\n//                   }\n//                 />\n//               );\n//             } \n//             else if(route.private){\n//               return (\n//                 <Route key={index} path={route.path} element={<Page />}>\n//                   {route.private.map((item, index) => {\n//                     const PagePrivate = item.component;\n//                     return (\n//                       <Route key={index} path={item.path} element={\n//                         <Fragment>\n//                           <PagePrivate/>\n//                         </Fragment>\n//                       } />\n//                     );\n//                   })}\n//                 </Route>\n//               );\n//             }\n//           })}\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n// export default App;\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport { publicRoutes } from \"./routes\";\nimport { DefaultLayout } from \"./layouts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: publicRoutes.map((route, index) => {\n          const Page = route.component;\n          let Layout = DefaultLayout;\n\n          if (route.layout) {\n            Layout = route.layout;\n          } else if (route.layout === null) {\n            Layout = Fragment;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: /*#__PURE__*/_jsxDEV(Layout, {\n              children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Fragment","publicRoutes","DefaultLayout","App","map","route","index","Page","component","Layout","layout","path"],"sources":["/Users/chiba/Desktop/Neko/src/App.js"],"sourcesContent":["// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import { Fragment } from \"react\";\n// import { publicRoutes } from \"./routes\";\n// import { DefaultLayout } from \"./layouts\";\n// function App() {\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           {publicRoutes.map((route, index) => {\n//             const Page = route.component;\n//             let Layout = DefaultLayout;\n//             if (route.layout) {\n//               Layout = route.layout;\n//             } else if (route.layout === null) {\n//               Layout = Fragment;\n//             }\n//             if (!route.private) {\n//               return (\n//                 <Route\n//                   key={index}\n//                   path={route.path}\n//                   element={\n//                     <Layout>\n//                       <Page />\n//                     </Layout>\n//                   }\n//                 />\n//               );\n//             } \n//             else if(route.private){\n//               return (\n//                 <Route key={index} path={route.path} element={<Page />}>\n//                   {route.private.map((item, index) => {\n//                     const PagePrivate = item.component;\n\n//                     return (\n//                       <Route key={index} path={item.path} element={\n//                         <Fragment>\n//                           <PagePrivate/>\n//                         </Fragment>\n//                       } />\n//                     );\n//                   })}\n//                 </Route>\n//               );\n//             }\n//           })}\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport { publicRoutes } from './routes';\nimport { DefaultLayout } from './layouts';\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Routes>\n                    {publicRoutes.map((route, index) => {\n                        const Page = route.component;\n                        let Layout = DefaultLayout;\n                        if (route.layout) {\n                            Layout = route.layout;\n                        } else if (route.layout === null) {\n                            Layout = Fragment;\n                        }\n                        return (\n                            <Route\n                                key={index}\n                                path={route.path}\n                                element={\n                                    <Layout>\n                                        \n                                        <Page />\n                                    </Layout>\n                                }\n                            />\n                        );\n                    })}\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT;AACA,SAASC,aAAT;;;AACA,SAASC,GAAT,GAAe;EACX,oBACI,QAAC,MAAD;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI,QAAC,MAAD;QAAA,UACKF,YAAY,CAACG,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,KAAkB;UAChC,MAAMC,IAAI,GAAGF,KAAK,CAACG,SAAnB;UACA,IAAIC,MAAM,GAAGP,aAAb;;UACA,IAAIG,KAAK,CAACK,MAAV,EAAkB;YACdD,MAAM,GAAGJ,KAAK,CAACK,MAAf;UACH,CAFD,MAEO,IAAIL,KAAK,CAACK,MAAN,KAAiB,IAArB,EAA2B;YAC9BD,MAAM,GAAGT,QAAT;UACH;;UACD,oBACI,QAAC,KAAD;YAEI,IAAI,EAAEK,KAAK,CAACM,IAFhB;YAGI,OAAO,eACH,QAAC,MAAD;cAAA,uBAEI,QAAC,IAAD;gBAAA;gBAAA;gBAAA;cAAA;YAFJ;cAAA;cAAA;cAAA;YAAA;UAJR,GACSL,KADT;YAAA;YAAA;YAAA;UAAA,QADJ;QAYH,CApBA;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;KA9BQH,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}