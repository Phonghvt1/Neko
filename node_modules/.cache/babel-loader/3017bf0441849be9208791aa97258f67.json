{"ast":null,"code":"var _jsxFileName = \"/Users/chiba/Desktop/Neko/src/pages/AddProductType.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid } from \"@mui/material\";\nimport { DashboardLayout } from \"../components/dashboard-layout\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useFormik } from \"formik\";\nimport { theme } from \"../theme\";\nimport { useEffect } from \"react\";\nimport { Box, Button, Card, CardContent, Divider, Typography, TextField, CardHeader } from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTypeProduct, reset } from \"../components/features/product/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddProductType() {\n  _s();\n\n  const {\n    isSuccess,\n    isError,\n    message\n  } = useSelector(state => state.product);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name_type: \"\"\n    },\n    onSubmit: values => {\n      dispatch(createTypeProduct(values));\n    },\n    validationSchema: Yup.object({\n      name_type: Yup.string().max(255).required(\"Loại sản phẩm là bắt buộc\")\n    })\n  });\n  useEffect(() => {\n    document.title = \"Thêm loại sản phẩm\";\n    dispatch(reset());\n  }, [reset]);\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(\"Thêm loại sản phẩm thành công\");\n    }\n\n    if (isError) {\n      toast.error(message);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(DashboardLayout, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"main\",\n          sx: {\n            flexGrow: 1,\n            py: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"lg\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 3\n              },\n              variant: \"h4\",\n              children: \"Th\\xEAm s\\u1EA3n ph\\u1EA9m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 8,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: formik.handleSubmit,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: \"Lo\\u1EA1i s\\u1EA3n ph\\u1EA9m\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 3,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 12,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            fullWidth: true,\n                            error: Boolean(formik.touched.name_type && formik.errors.name_type),\n                            helperText: formik.touched.name_type && formik.errors.name_type,\n                            label: \"Lo\\u1EA1i\",\n                            name: \"name_type\",\n                            onBlur: formik.handleBlur,\n                            onChange: formik.handleChange,\n                            variant: \"outlined\",\n                            required: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 74,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 73,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        p: 2\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"contained\",\n                        type: \"submit\",\n                        children: \"L\\u01B0u\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddProductType, \"EZtQdJsiJCtuL7lqMIB0F8uSPB8=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = AddProductType;\nexport default AddProductType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductType\");","map":{"version":3,"names":["Container","Grid","DashboardLayout","ThemeProvider","useFormik","theme","useEffect","Box","Button","Card","CardContent","Divider","Typography","TextField","CardHeader","Yup","ToastContainer","toast","useDispatch","useSelector","createTypeProduct","reset","AddProductType","isSuccess","isError","message","state","product","dispatch","formik","initialValues","name_type","onSubmit","values","validationSchema","object","string","max","required","document","title","success","error","flexGrow","py","mb","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","display","justifyContent","p"],"sources":["/Users/chiba/Desktop/Neko/src/pages/AddProductType.jsx"],"sourcesContent":["import { Container, Grid } from \"@mui/material\";\nimport { DashboardLayout } from \"../components/dashboard-layout\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useFormik } from \"formik\";\nimport { theme } from \"../theme\";\nimport { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Typography,\n  TextField,\n  CardHeader,\n} from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTypeProduct, reset } from \"../components/features/product/productSlice\";\n\nfunction AddProductType() {\n  const { isSuccess, isError, message } = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name_type: \"\",\n    },\n    onSubmit: (values) => {\n      dispatch(createTypeProduct(values));\n    },\n    validationSchema: Yup.object({\n      name_type: Yup.string().max(255).required(\"Loại sản phẩm là bắt buộc\"),\n    }),\n  });\n  useEffect(() => {\n    document.title = \"Thêm loại sản phẩm\";\n    dispatch(reset())\n  },[reset]);\n  useEffect(() => {\n    if(isSuccess){\n      toast.success(\"Thêm loại sản phẩm thành công\")\n    }\n    if(isError){\n      toast.error(message)\n    }\n  });\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <DashboardLayout>\n          {\n            <Box\n              component=\"main\"\n              sx={{\n                flexGrow: 1,\n                py: 8,\n              }}\n            >\n              <Container maxWidth=\"lg\">\n                <Typography sx={{ mb: 3 }} variant=\"h4\">\n                  Thêm sản phẩm\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item lg={8} md={6} xs={12}>\n                    <form onSubmit={formik.handleSubmit}>\n                      <Card>\n                        <CardHeader title=\"Loại sản phẩm\" />\n                        <Divider />\n                        <CardContent>\n                          <Grid container spacing={3}>\n                            <Grid item md={12} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.name_type &&\n                                    formik.errors.name_type\n                                )}\n                                helperText={\n                                  formik.touched.name_type &&\n                                  formik.errors.name_type\n                                }\n                                label=\"Loại\"\n                                name=\"name_type\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                              />\n                            </Grid>\n                          </Grid>\n                        </CardContent>\n                        <Divider />\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n                            p: 2,\n                          }}\n                        >\n                          <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                          >\n                            Lưu\n                          </Button>\n                        </Box>\n                      </Card>\n                    </form>\n                  </Grid>\n                </Grid>\n              </Container>\n              \n            </Box>\n \n          }\n        </DashboardLayout>\n        <ToastContainer/>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default AddProductType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}